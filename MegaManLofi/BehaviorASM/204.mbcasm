##########################################################################
#
# 204: Bad Dude
#
##########################################################################
#
# Float Registers:
#
# [1] - X velocity moving left (-400)
# [2] - X velocity moving right (400)
# [3] - left position threshold (starting left position minus 760)
# [4] - right position threshold (starting left position plus 760)
# [5] - current left position
# [6] - player's current left position
# [7] - player's current top position
#
# [10] - frame seconds
# [11] - frame second counter
# [12] - jump time threshold (2)
# [13] - jump Y velocity (-3000)
# [14] - shoot time counter
# [15] - shoot time threshold (1.5)
#
# [30] - temporary use
#
# Int Registers:
#
# [0] - first run checker (false if this is the first run)
#
# [2] - Direction::Left (0)
# [3] - Direction::Right (4)
# [4] - current direction
#
# [5] - do we want to shoot?
#
##########################################################################

FUNC main

	get_positionLeft 5
	get_frameSeconds 10
	get_playerPositionLeft 6
	get_playerPositionTop 7

	# init on first run
	if_falsei 0
		call init
		regi 0 1
	endif

	call adjustMovement
	call checkJump
	call checkShoot

RET

FUNC init

	# directions
	regi 2 0   # left
	regi 3 4   # right

	regf 1 -400   # left X velocity
	regf 2 400    # right X velocity

	regf 30 760   # 20 tiles
	subf 5 30 3   # left position threshold
	addf 5 30 4   # right position threshold

	set_direction 2   # face left first
	regi 4 0

	# jump time threshold and Y velocity
	regf 12 2
	regf 13 -3000

	# shoot time threshold and want-to-shoot flags
	regf 15 1.5
	regi 7 1

	# we don't want to shoot right away
	regi 5 0

RET

FUNC adjustMovement

	if_eqi 4 2   # moving left
		if_ltef 5 3   # if we've reached the left threshold, turn right
			set_direction 3
			regi 4 4
			set_velocityX 2
		else
			set_velocityX 1
		endif
	else   # moving right
		if_gtef 5 4   # if we've reached the right threshold, turn left
			set_direction 2
			regi 4 0
			set_velocityX 1
		else
			set_velocityX 2
		endif
	endif

RET

FUNC checkJump

	addf 11 10 11  # increase jump timer

	if_gtf 11 12  # time to jump, then reset the timer
		set_velocityY 13
		regf 11 0
	endif

RET

FUNC checkShoot

	if_falsei 5  # we don't want to shoot
		addf 14 10 14  # increase shoot timer
	
		if_gtf 14 15
			regi 5 1  # now we want to shoot
			regf 14 0  # reset shoot timer
		endif
	endif

	if_falsei 5  # we still don't want to shoot
		RET
	endif

	if_ltf 6 5  # player is to the left
		if_eqi 4 2  # we're facing left, shoot!
			shootTarget 6 7
			regi 5 0
		endif
	else  # player is to the right
		if_eqi 4 3  # we're facing right, shoot!
			shootTarget 6 7
			regi 5 0
		endif
	endif

RET
